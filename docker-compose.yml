version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: teleshopuser
      POSTGRES_PASSWORD: SecurePass123
      POSTGRES_DB: teleshop
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U teleshopuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot1:
    build: .
    ports:
      - "5001:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT1_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot2:
    build: .
    ports:
      - "5002:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT2_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot3:
    build: .
    ports:
      - "5003:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT3_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot4:
    build: .
    ports:
      - "5004:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT4_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot5:
    build: .
    ports:
      - "5005:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT5_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot6:
    build: .
    ports:
      - "5006:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT6_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot7:
    build: .
    ports:
      - "5007:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT7_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot8:
    build: .
    ports:
      - "5008:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT8_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot9:
    build: .
    ports:
      - "5009:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT9_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  bot10:
    build: .
    ports:
      - "5010:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      TELEGRAM_BOT_TOKEN: ${BOT10_TOKEN}
      DATABASE_URL: postgresql://teleshopuser:SecurePass123@postgres:5432/teleshop
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
